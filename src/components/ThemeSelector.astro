---
//import AppInterface from "./AppInterface.astro";
---


<script>
import {allThemes} from "./Themes.astro";

    let mainContainer = "tool-bar";
    let canvasName = "jordans-themes-canvas";
    let canvasId = "theme-selector-canvas";
    let themesContainerId = "themes-container";

    class ThemeSelector extends HTMLButtonElement {

        constructor () {
            super();
        }

        connectedCallback() {
            this.createThemeButton();
            this.initThemeSelection();
        }

        createThemeButton() {
            
            this.innerHTML =
                `
                    <div tabindex="0" class="icon"> 
                        <svg width="20" height="20" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 24" class="inline-block h-5 w-5 stroke-current md:h-6 md:w-6">
                            <path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 21a4 4 0 01-4-4V5a2 2 0 012-2h4a2 2 0 012 2v12a4 4 0 01-4 4zm0 0h12a2 2 0 002-2v-4a2 2 0 00-2-2h-2.343M11 7.343l1.657-1.657a2 2 0 012.828 0l2.829 2.829a2 2 0 010 2.828l-8.486 8.485M7 17h.01"></path>
                        </svg>
                    </div>
                    <span class="item-tooltip">Theme</span>
                `;
        }

        initThemeSelection () {
            //console.log("init theme selection");
            var container = document.getElementById(mainContainer);
            container?.append(document.createElement(canvasName));

            document.querySelector(canvasName)?.setAttribute("id", canvasId);
            var themes = document.getElementById(canvasId)
            themes.className = "bg-neutral";
            themes.style.display = "none"; 
        }
    }

    class ThemeSelectorCanvas extends HTMLElement {
        //shadowRoot;
        constructor() {
            super();
            //this.shadowRoot = this.attachShadow({ mode: "open" });
        }

        connectedCallback() {
            this.init_Canvas();
            
            let container = this.querySelector("#themes-container");
            container.innerHTML = allThemes; //fill the necessary container with the available themes

            this.changeThemeBehavior(document);
        }

        init_Canvas() {
            this.innerHTML = `
                <style>
                    /* Hide scrollbar for Chrome, Safari and Opera */
                    #theme-selector-canvas::-webkit-scrollbar {
                        display: none;
                    }

                    #${canvasId} {
                        max-height: 190px;
                        /*width: min(320px, 100%);*/

                        position: fixed;
                        z-index: 999999999;
                        top: 72px;
                        right: 8.8%;
                        overflow-y: auto;
                        -ms-overflow-style: none;  /* IE and Edge */
                        scrollbar-width: none;  /* Firefox */

                        box-sizing: border-box;
                        display: block;
                        flex-direction: column;
                        border: 1px solid rgba(52, 56, 65, 1);
                        border-radius: 12px;
                        padding: 24px;

                        opacity: .95;
                        /*background: linear-gradient(0deg, #13151A, #13151A), linear-gradient(0deg, #343841, #343841);*/
                            
                        box-shadow: 0px 0px 0px 0px rgba(19, 21, 26, 0.30), 
                            0px 1px 2px 0px rgba(19, 21, 26, 0.29), 
                            0px 4px 4px 0px rgba(19, 21, 26, 0.26), 
                            0px 10px 6px 0px rgba(19, 21, 26, 0.15), 
                            0px 17px 7px 0px rgba(19, 21, 26, 0.04), 
                            0px 26px 7px 0px rgba(19, 21, 26, 0.01);

                        --color-purple: rgba(224, 204, 250, 1);
                        color: rgba(191, 193, 201, 1);

                        font-family: ui-sans-serif, system-ui, -apple-system, 
                            BlinkMacSystemFont, "Segoe UI", Roboto, 
                            "Helvetica Neue", Arial, "Noto Sans", 
                            sans-serif, "Apple Color Emoji", "Segoe UI Emoji", 
                            "Segoe UI Symbol", "Noto Color Emoji";
                    }
                </style>
                
                <div class="dropdown-content text-base-content rounded-t-box rounded-b-box top-px max-h-96 w-52">
                    <div id="${themesContainerId}" class="grid grid-cols-1 gap-3 p-3" tabindex="0">
                    </div>
                </div>
            `;
        }

        setTheme(doc) {
            const theme = window.localStorage.getItem("data-theme");
      
            if (theme) {
                this.updateTheme(doc, theme);
            } else {
                this.updateTheme(doc, "dark");
            }
        }
      
        updateTheme(doc, newTheme) {
            doc.querySelector("html").setAttribute("data-theme", newTheme);
            window.localStorage.setItem("data-theme", newTheme);
        }
      
        changeThemeBehavior(doc) {
            const theme_selectors = doc.querySelectorAll("#"+ themesContainerId + " div[data-theme]");

            theme_selectors.forEach((selector) => {
                selector.addEventListener("click", () => {
                    this.updateTheme(doc, selector.getAttribute("data-theme"));
                });
            });
        }
    }

    
    customElements.define("jordans-themes", ThemeSelector, {extends: 'button'});
    customElements.define(canvasName, ThemeSelectorCanvas);
</script>